#include <bits/stdc++.h>
#include <windows.h>
#include <SDL.h>
#include <SDL_image.h>
using namespace std;
const int SCREEN_WIDTH = 1200;
const int SCREEN_HEIGHT = 600;
const string WINDOW_TITLE = "Mario";


void logSDLError(ostream& os, const string &msg, bool fatal = false);
void logSDLError(ostream& os, const string &msg, bool fatal)
{
    os << msg << " Error: " << SDL_GetError() << endl;
    if (fatal) {
        SDL_Quit();
        exit(1);
    }
}
void initSDL(SDL_Window* &window, SDL_Renderer* &renderer){
    if (SDL_Init(SDL_INIT_EVERYTHING) != 0)
        logSDLError(cout, "SDL_Init", true);

    window = SDL_CreateWindow(WINDOW_TITLE.c_str(), SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
    if (window == nullptr) logSDLError(cout, "CreateWindow", true);

    renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
    if (renderer == nullptr) logSDLError(cout, "CreateRenderer", true);

    SDL_SetHint(SDL_HINT_RENDER_SCALE_QUALITY, "linear");//
    SDL_RenderSetLogicalSize(renderer, SCREEN_WIDTH, SCREEN_HEIGHT);
}
void quitSDL(SDL_Window* window, SDL_Renderer* renderer){
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
}

//-----------------------------------------------------------------------------------------

SDL_Texture* loadTexture(const std::string &file, SDL_Renderer *renderer)
{
    SDL_Texture *texture = nullptr;
	//nap anh tu ten file (voi duong dan)
	SDL_Surface *loadedImage = IMG_Load(file.c_str());
	//Neu khong co loi, chuyen doi ve dang texture and va tra ve
	if (loadedImage != nullptr){
		texture = SDL_CreateTextureFromSurface(renderer, loadedImage);
		SDL_FreeSurface(loadedImage);
		//dam bao viec chuyen doi khong co loi
		if (texture == nullptr){
			logSDLError(std::cout, "CreateTextureFromSurface");
		}
	}
	else {
		logSDLError(std::cout, "LoadBMP");
	}
	return texture;
}
void renderTexture(SDL_Texture *tex, SDL_Renderer *ren, int x, int y, int w, int h)
{
	//Thiet lap hinh chu nhat dich ma chung ta muon ve anh vao trong
	SDL_Rect dst;
	dst.x = x;
	dst.y = y;
    dst.w = w;
    dst.h = h;
    //Dua toan bo anh trong texture vao hinh chu nhat dich
	SDL_RenderCopy(ren, tex, NULL, &dst);
}

void renderTexture(SDL_Texture *tex, SDL_Renderer *ren, int x, int y)
{

	SDL_Rect dst;
	dst.x = x;
	dst.y = y;
	SDL_QueryTexture(tex, NULL, NULL, &dst.w, &dst.h);

	SDL_RenderCopy(ren, tex, NULL, &dst);
}
//-----------------------------------------------------------------------------------------

//void input_action(SDL_Event events, Input *input_type_ ) {
//    if (events.type == SDL_KEYDOWN) {
//        switch (events.key.keysym.sym) {
//            case SDLK_RIGHT: {
//
//                input_type_ -> right_ = 1;
//                input_type_ -> left_ = 0;
//                break;
//            }
//            case SDLK_LEFT: {
//                input_type_ -> left_ = 1;
//                input_type_ -> right_ = 0;
//                break;
//            }
//            case SDLK_UP: {
//                input_type_ -> up_ = 1;
//                break;
//            }
//        }
//    }
//    else if (events.type == SDL_KEYUP) {
//        switch (events.key.keysym.sym) {
//            case SDLK_RIGHT: {
//                input_type_ -> right_ = 0;
//                break;
//            }
//            case SDLK_LEFT: {
//                input_type_ -> left_ = 0;
//                break;
//            }
//            case SDLK_UP: {
//                input_type_ -> up_ = 0;
//                break;
//            }
//        }
//    }
//}
//
void draw(SDL_Texture *dango, SDL_Renderer* renderer, int x, int y) {

    renderTexture(dango, renderer, x, y, 100, 100);
    SDL_RenderPresent(renderer);
}
void waitUntilKeyPressed();

void waitUntilKeyPressed(SDL_Texture *dango, SDL_Renderer* renderer)
{
    int x = 100;
    int y = 100;
    SDL_Event e;
    while (true) {
        if ( SDL_WaitEvent(&e) != 0) {
            if (e.type == SDL_KEYDOWN) {
                switch (e.key.keysym.sym) {
                    case SDLK_UP: {
                        y-=50;
                        draw(dango,renderer,x,y);
                        break;
                    }
                    case SDLK_DOWN: {
                        y+=50;
                        draw(dango,renderer,x,y);
                        break;
                    }
                    case SDLK_RIGHT: {
                        x+=50;
                        draw(dango,renderer,x,y);
                        break;
                    }
                    case SDLK_LEFT: {
                        x-=50;
                        draw(dango,renderer,x,y);
                        break;
                    }
                }
            }
            if (e.type == SDL_QUIT)
                return;
        }
    }
}


//-----------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------

int main(int argc, char* argv[])
{

    SDL_Window* window;
    SDL_Renderer* renderer;
    initSDL(window, renderer);

    SDL_Texture *dango=loadTexture("dango.png", renderer);
    renderTexture(dango, renderer, 100, 100, 100, 100);
    SDL_RenderPresent(renderer);

    waitUntilKeyPressed(dango, renderer);





    quitSDL(window, renderer);
    return 0;
}
